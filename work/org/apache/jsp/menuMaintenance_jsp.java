/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.20
 * Generated at: 2020-12-10 09:38:30 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.sun.swing.internal.plaf.metal.resources.metal;
import java.util.ArrayList;
import controller.MenuDeleteSvl;
import controller.MenuOperationSvl;
import model.Menu;
import model.MenuType;
import java.io.*;
import java.text.NumberFormat;
import java.util.Locale;

public final class menuMaintenance_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {


	static String fmtNull(String s){
		if(s == null || s.equals("")){
			s = "";
		}
		return s;

	}


  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(1);
    _jspx_dependants.put("/incFile.jsp", Long.valueOf(1605242901286L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("java.io");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("controller.MenuOperationSvl");
    _jspx_imports_classes.add("model.Menu");
    _jspx_imports_classes.add("controller.MenuDeleteSvl");
    _jspx_imports_classes.add("java.util.Locale");
    _jspx_imports_classes.add("com.sun.swing.internal.plaf.metal.resources.metal");
    _jspx_imports_classes.add("model.MenuType");
    _jspx_imports_classes.add("java.text.NumberFormat");
    _jspx_imports_classes.add("java.util.ArrayList");
  }

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\r\n");
      out.write("<html xmlns=\"http://www.w3.org/1999/xhtml\">\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" />\r\n");
      out.write("<title>Menu Maintenance</title>\r\n");
      out.write("<style type=\"text/css\">\r\n");
      out.write("<!--\r\n");
      out.write("table {\r\n");
      out.write("\ttext-align: center;\r\n");
      out.write("\tmargin: auto;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("caption {\r\n");
      out.write("\tfont-size: 18pt;\r\n");
      out.write("\tcolor: #009967;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("tr#data0 {\r\n");
      out.write("\tbackground: #E3FFE3;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("tr#data1 {\r\n");
      out.write("\tbackground: #A4FFDB;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("th#data2 {\r\n");
      out.write("\tbackground: #007B66;\r\n");
      out.write("\tline-height: 35px\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("th {\r\n");
      out.write("\tbackground: #007B66;\r\n");
      out.write("\tcolor: #ECFFF3;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("td {\r\n");
      out.write("\ttext-align: left;\r\n");
      out.write("\tvertical-align: top;\r\n");
      out.write("\twhite-space: nowrap;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("td#outer {\r\n");
      out.write("\tpadding: 10px;\r\n");
      out.write("\tbackground: #FAFFE3;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#code {\r\n");
      out.write("\twidth: 40px;\r\n");
      out.write("\ttext-align: center;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#menu {\r\n");
      out.write("\twidth: 250px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#price {\r\n");
      out.write("\twidth: 60px;\r\n");
      out.write("\ttext-align: right;\r\n");
      out.write("\tpadding-right: 5px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#comm {\r\n");
      out.write("\twidth: 400px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#ord {\r\n");
      out.write("\twidth: 100px;\r\n");
      out.write("\ttext-align: center;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#btn {\r\n");
      out.write("\twidth: 100px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("h1 {\r\n");
      out.write("\ttext-align: center;\r\n");
      out.write("\tbackground: #007B66;\r\n");
      out.write("\tcolor: #ECFFF3;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("div#type1 {\r\n");
      out.write("\twidth: 150px;\r\n");
      out.write("\tborder: solid gray 1px;\r\n");
      out.write("\tbackground: #E3FFE3;\r\n");
      out.write("\tcolor: #007B53;\r\n");
      out.write("\tpadding: 2px;\r\n");
      out.write("\tcursor: pointer;\r\n");
      out.write("\tmargin-top: 5px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("div#type2 {\r\n");
      out.write("\twidth: 150px;\r\n");
      out.write("\tborder: solid gray 1px;\r\n");
      out.write("\tbackground: #007B53;\r\n");
      out.write("\tcolor: #E3FFE3;\r\n");
      out.write("\tpadding: 2px;\r\n");
      out.write("\tcursor: pointer;\r\n");
      out.write("\tmargin-top: 5px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".button {\r\n");
      out.write("\tdisplay: inline-block;\r\n");
      out.write("\tborder-radius: 5%; /* 角丸       */\r\n");
      out.write("\tfont-size: 10pt; /* 文字サイズ */\r\n");
      out.write("\ttext-align: center; /* 文字位置   */\r\n");
      out.write("\tcursor: pointer; /* カーソル   */\r\n");
      out.write("\tpadding: 5px 5px; /* 余白       */\r\n");
      out.write("\tbackground: #e7e7e7; /* 背景色     */\r\n");
      out.write("\tcolor: #000000; /* 文字色     */\r\n");
      out.write("\tline-height: 1em; /* 1行の高さ  */\r\n");
      out.write("\ttransition: .3s; /* なめらか変化 */\r\n");
      out.write("\tbox-shadow: 7px 7px 5px #666666; /* 影の設定 */\r\n");
      out.write("\tborder: 2px solid #e7e7e7; /* 枠の指定 */\r\n");
      out.write("\tfont-weight: bold;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".button:hover {\r\n");
      out.write("\tbox-shadow: none; /* カーソル時の影消去 */\r\n");
      out.write("\topacity: 0.95;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".bluebutton {\r\n");
      out.write("\tdisplay: inline-block;\r\n");
      out.write("\tborder-radius: 20%; /* 角丸       */\r\n");
      out.write("\tfont-size: 9pt; /* 文字サイズ */\r\n");
      out.write("\ttext-align: center; /* 文字位置   */\r\n");
      out.write("\tcursor: pointer; /* カーソル   */\r\n");
      out.write("\tpadding: 5px 5px; /* 余白       */\r\n");
      out.write("\tbackground: rgba(0, 123, 102, 0.79); /* 背景色     */\r\n");
      out.write("\tcolor: #ffffff; /* 文字色     */\r\n");
      out.write("\tline-height: 1em; /* 1行の高さ  */\r\n");
      out.write("\ttransition: .3s; /* なめらか変化 */\r\n");
      out.write("\tbox-shadow: 4px 4px 3px #666666; /* 影の設定 */\r\n");
      out.write("\tborder: 2px solid rgba(0, 0, 102, 0.46); /* 枠の指定 */\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".bluebutton:hover {\r\n");
      out.write("\tbox-shadow: none; /* カーソル時の影消去 */\r\n");
      out.write("\tcolor: rgba(0, 123, 102, 0.79); /* 背景色     */\r\n");
      out.write("\tbackground: #ffffff; /* 文字色     */\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".redbutton {\r\n");
      out.write("\tdisplay: inline-block;\r\n");
      out.write("\tborder-radius: 20%; /* 角丸       */\r\n");
      out.write("\tfont-size: 9pt; /* 文字サイズ */\r\n");
      out.write("\ttext-align: center; /* 文字位置   */\r\n");
      out.write("\tcursor: pointer; /* カーソル   */\r\n");
      out.write("\tpadding: 5px 5px; /* 余白       */\r\n");
      out.write("\tbackground: rgba(225, 19, 19, 0.72); /* 背景色     */\r\n");
      out.write("\tcolor: #ffffff; /* 文字色     */\r\n");
      out.write("\tline-height: 1em; /* 1行の高さ  */\r\n");
      out.write("\ttransition: .3s; /* なめらか変化 */\r\n");
      out.write("\tbox-shadow: 4px 4px 3px #666666; /* 影の設定 */\r\n");
      out.write("\tborder: 2px solid rgba(255, 0, 0, 0.52); /* 枠の指定 */\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".redbutton:hover {\r\n");
      out.write("\tbox-shadow: none; /* カーソル時の影消去 */\r\n");
      out.write("\tcolor: rgba(225, 19, 19, 0.72); /* 背景色     */\r\n");
      out.write("\tbackground: #ffffff; /* 文字色     */\r\n");
      out.write("}\r\n");
      out.write("-->\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("\t<h1>=== メニューマスターメンテナンス ===</h1>\r\n");
      out.write("\r\n");
      out.write("\t<!-- Beanを生成(typeID,menuID,modeの3種類) -->\r\n");

	ArrayList<MenuType> mType = (ArrayList<MenuType>)request.getAttribute("mType");
	ArrayList<Menu> menu = (ArrayList<Menu>)request.getAttribute("menu");
	String mode = (String)request.getAttribute("mode");

      out.write("\r\n");
      out.write("\t\t<p align=\"center\">");
      out.print(fmtNull((String) request.getAttribute("msg")));
      out.write("</p>\r\n");
      out.write("\r\n");
      out.write("\t<table align=\"left\" style=\"border-collapse: collapse\">\r\n");
      out.write("\r\n");
      out.write("\t\t<!-- TODO:メッセージの表示メソッド -->\r\n");
      out.write("\r\n");
      out.write("\t\t");

			//左側のメニュータイプ欄を表示する
			for (int i = 0; i < mType.size(); i++) {
				MenuType mt = (MenuType) mType.get(i);
				String divId = null;
				if (request.getParameter("typeId") != null) {
					if (Integer.parseInt(request.getParameter("typeId")) == mt
							.getTypeId()) {
						divId = "type2";
					} else {
						divId = "type1";
					}
				} else {
					if (100 == mt.getTypeId()) {
						divId = "type2";
					} else {
						divId = "type1";
					}
				}
		
      out.write("\r\n");
      out.write("\t\t<tr>\r\n");
      out.write("\t\t\t<td>\r\n");
      out.write("\t\t\t\t<form id=\"frm");
      out.print(i);
      out.write("\" name=\"frm");
      out.print(i);
      out.write("\"\r\n");
      out.write("\t\t\t\t\taction=\"MenuMaintenanceSvl\" method=\"post\">\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t<input type=\"hidden\" name=\"typeId\" value=\"");
      out.print(mt.getTypeId());
      out.write("\" />\r\n");
      out.write("\t\t\t\t\t<div id=\"");
      out.print(divId);
      out.write("\" onclick=\"document.frm");
      out.print(i);
      out.write(".submit();\">");
      out.print(mt.getTypeName());
      out.write("</div>\r\n");
      out.write("\t\t\t\t</form>\r\n");
      out.write("\t\t\t</td>\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t\t");

			}
		
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t</table>\r\n");
      out.write("\r\n");
      out.write("\t");

		//価格の表示用
		NumberFormat nf = NumberFormat.getCurrencyInstance();
		//オーダー可不可の表示
		String[] order = { "不可", "可" };
	
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t<!-- 一覧表 -->\r\n");
      out.write("\t<table>\r\n");
      out.write("\t\t<tr>\r\n");
      out.write("\t\t\t<th id=\"id\">ID</th>\r\n");
      out.write("\t\t\t<th id=\"menu\" width=\"400\">メニュー</th>\r\n");
      out.write("\t\t\t<th id=\"price\">価格</th>\r\n");
      out.write("\t\t\t<th id=\"comment\" width=\"500\">コメント</th>\r\n");
      out.write("\t\t\t<th id=\"order\">オーダー可</th>\r\n");
      out.write("\t\t\t<th id=\"button\" colspan=\"2\"></th>\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\r\n");
      out.write("\t\t");

			for (int i = 0; i < menu.size(); i++) {
				Menu m = (Menu) menu.get(i);
		
      out.write("\r\n");
      out.write("\t\t<tr id=\"data");
      out.print(i % 2);
      out.write("\">\r\n");
      out.write("\t\t\t<td id=\"id\">");
      out.print(m.getMenuId());
      out.write("</td>\r\n");
      out.write("\t\t\t<td id=\"menu\">");
      out.print(m.getMenuName());
      out.write("</td>\r\n");
      out.write("\t\t\t<td id=\"price\">");
      out.print(nf.format(m.getPrice()));
      out.write("</td>\r\n");
      out.write("\t\t\t<td id=\"comment\">");
      out.print(fmtNull(m.getDetail()));
      out.write("</td>\r\n");
      out.write("\t\t\t<td id=\"order\">");
      out.print(order[m.getOrderFlg()]);
      out.write("</td>\r\n");
      out.write("\t\t\t<td>\r\n");
      out.write("\t\t\t\t<form id=\"frmUpdate\" name=\"frmUpdate\" action=\"MenuUpdateSvl\"\r\n");
      out.write("\t\t\t\t\tmethod=\"post\">\r\n");
      out.write("\t\t\t\t\t<input type=\"hidden\" name=\"mode\"\r\n");
      out.write("\t\t\t\t\t\tvalue=\"");
      out.print(MenuOperationSvl.UPDATE);
      out.write("\" /> <input type=\"hidden\"\r\n");
      out.write("\t\t\t\t\t\tname=\"typeId\" value=\"");
      out.print(m.getTypeId());
      out.write("\" /> <input\r\n");
      out.write("\t\t\t\t\t\ttype=\"hidden\" name=\"menuId\" value=\"");
      out.print(m.getMenuId());
      out.write("\" /> <input\r\n");
      out.write("\t\t\t\t\t\ttype=\"submit\" value=\"更新\" class=\"bluebutton\" />\r\n");
      out.write("\t\t\t\t</form>\r\n");
      out.write("\t\t\t</td>\r\n");
      out.write("\t\t\t<td>\r\n");
      out.write("\t\t\t\t<form id=\"frmDelete\" name=\"frmDelete\" action=\"MenuDeleteSvl\"\r\n");
      out.write("\t\t\t\t\tmethod=\"post\">\r\n");
      out.write("\t\t\t\t\t<input type=\"hidden\" name=\"mode\"\r\n");
      out.write("\t\t\t\t\t\tvalue=\"");
      out.print(MenuOperationSvl.DELETE);
      out.write("\" /> <input type=\"hidden\"\r\n");
      out.write("\t\t\t\t\t\tname=\"typeId\" value=\"");
      out.print(m.getTypeId());
      out.write("\" /> <input\r\n");
      out.write("\t\t\t\t\t\ttype=\"hidden\" name=\"menuId\" value=\"");
      out.print(m.getMenuId());
      out.write("\" /> <input\r\n");
      out.write("\t\t\t\t\t\ttype=\"submit\" value=\"削除\" class=\"redbutton\" />\r\n");
      out.write("\t\t\t\t</form>\r\n");
      out.write("\t\t\t</td>\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t\t");

			}
		
      out.write("\r\n");
      out.write("\t\t<tr height=\"40\">\r\n");
      out.write("\t\t\t<form action=\"MenuInsertSvl\" method=\"post\">\r\n");
      out.write("\t\t\t\t<th colspan=\"7\" id=\"data2\"><input type=\"hidden\" name=\"typeId\"\r\n");
      out.write("\t\t\t\t\tvalue=\"");
      out.print(request.getParameter("typeId"));
      out.write("\" /> <input\r\n");
      out.write("\t\t\t\t\ttype=\"hidden\" name=\"mode\" value=\"");
      out.print(MenuOperationSvl.INSERT);
      out.write("\" />\r\n");
      out.write("\t\t\t\t\t<input type=\"submit\" value=\"新しいメニューの追加\" class=\"button\" /></th>\r\n");
      out.write("\t\t\t</form>\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t</table>\r\n");
      out.write("\t<br />\r\n");
      out.write("\t\t<div align=\"center\"><a href=\"adminIndex.jsp\">管理者メニューへ戻る</a></div>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
