/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.20
 * Generated at: 2020-12-10 09:38:56 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import model.Reserve;
import model.Admin;
import java.util.ArrayList;
import java.time.LocalDate;

public final class adminReserveList_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {


	static String fmtNull(String s){
		if(s == null || s.equals("")){
			s = "";
		}
		return s;

	}


  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(1);
    _jspx_dependants.put("/incFile.jsp", Long.valueOf(1605242901286L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("model.Reserve");
    _jspx_imports_classes.add("model.Admin");
    _jspx_imports_classes.add("java.time.LocalDate");
    _jspx_imports_classes.add("java.util.ArrayList");
  }

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\r\n");
      out.write("<html xmlns=\"http://www.w3.org/1999/xhtml\">\r\n");
      out.write("<head>\r\n");
      out.write("\t<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" />\r\n");
      out.write("\t<title>予約情報一覧</title>\r\n");
      out.write("\t<!-- 要CSS -->\r\n");
      out.write("\t");
      out.write("<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t");
 request.setCharacterEncoding("utf-8"); 
      out.write('\r');
      out.write('\n');
      out.write('	');
      ArrayList<Reserve> reserveList = null;
      reserveList = (ArrayList<Reserve>) _jspx_page_context.getAttribute("reserveList", javax.servlet.jsp.PageContext.REQUEST_SCOPE);
      if (reserveList == null){
        reserveList = new java.util.ArrayList();
        _jspx_page_context.setAttribute("reserveList", reserveList, javax.servlet.jsp.PageContext.REQUEST_SCOPE);
      }
      out.write('\r');
      out.write('\n');
      out.write('	');

		//管理者情報を取得
		Admin ad = (Admin)session.getAttribute("adminInfo");
	
      out.write("\r\n");
      out.write("\t<h2 align=\"center\">");
      out.print( ad.getAdmName() );
      out.write("様&ensp;予約情報一覧</h2>\r\n");
      out.write("\t<h3 align=\"center\">");
      out.print( fmtNull((String)request.getAttribute("msg")) );
      out.write("</h3>\r\n");
      out.write("\t<div align=\"center\">\r\n");
      out.write("\t\t<form action=\"AdminReserveListSvl\" method=\"post\" onsubmit=\"return checkData(this);\">\r\n");
      out.write("\t\t\t<select name=\"selectedDateStr\">\r\n");
      out.write("\t\t\t\t");

					//現在の年月日情報を取得
					LocalDate currentDate = LocalDate.now();
					//選択された年月日情報を取得
					LocalDate selectedDate;
					if(request.getParameter("selectedDateStr") != null){
						selectedDate = LocalDate.parse(request.getParameter("selectedDateStr"));
					}else{
						//初回アクセス時は現在の年月日をセット
						selectedDate = currentDate;
					}
					//その他の年月日情報を生成
					LocalDate firstDate = selectedDate.minusYears(1);  //選択されている日－１年
					LocalDate lastDate  = currentDate.plusYears(1);    //現在＋１年
					//firstDateからlastDateまで繰り返し
					for(LocalDate d = firstDate; d.isBefore(lastDate); d = d.plusDays(1)){
						String selected = "";
						if(d.isEqual(selectedDate)){
							selected = "selected";
						}
				
      out.write("\r\n");
      out.write("\t\t\t\t\t\t<option value=\"");
      out.print( d.toString() );
      out.write('"');
      out.write(' ');
      out.print( selected );
      out.write(">\r\n");
      out.write("\t\t\t\t\t\t\t");
      out.print( d.toString().replace("-", " / ") );
      out.write("\r\n");
      out.write("\t\t\t\t\t\t</option>\r\n");
      out.write("\t\t\t\t");

					}
				
      out.write("\r\n");
      out.write("\t\t\t</select>\r\n");
      out.write("\t\t\t<input type=\"submit\" value=\"表示\"/>\r\n");
      out.write("\t\t</form>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t<br/>\r\n");
      out.write("\t<table border align=\"center\">\r\n");
      out.write("\t\t<tr>\r\n");
      out.write("\t\t\t<th>No</th>\r\n");
      out.write("\t\t\t<th>お名前</th>\r\n");
      out.write("\t\t\t<th>ご予約日時</th>\r\n");
      out.write("\t\t\t<th>人数</th>\r\n");
      out.write("\t\t\t<th>コース名</th>\r\n");
      out.write("\t\t\t<th>テーブル名</th>\r\n");
      out.write("\t\t\t<th>登録日時</th>\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t\t");

			for(Reserve r : reserveList){
		
      out.write("\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t<td>");
      out.print( r.getRsvId() );
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t<td>");
      out.print( r.getUsrName() );
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t<td>\r\n");
      out.write("\t\t\t\t\t\t");
      out.print( r.getRsvYy() );
      out.write('年');
      out.print( r.getRsvMm() );
      out.write('月');
      out.print( r.getRsvDd() );
      out.write("日&ensp;\r\n");
      out.write("\t\t\t\t\t\t");
      out.print( r.getRsvHh() );
      out.write('時');
      out.print( r.getRsvMi() );
      out.write("分\r\n");
      out.write("\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t\t<td>");
      out.print( r.getPerson() );
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t<td>");
      out.print( r.getCourseName() );
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t<td>");
      out.print( fmtNull(r.getTableName()) );
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t<td>\r\n");
      out.write("\t\t\t\t\t\t");
      out.print( r.getAppYy() );
      out.write('年');
      out.print( r.getAppMm() );
      out.write('月');
      out.print( r.getAppDd() );
      out.write("日&ensp;\r\n");
      out.write("\t\t\t\t\t\t");
      out.print( r.getAppHh() );
      out.write('時');
      out.print( r.getAppMi() );
      out.write("分\r\n");
      out.write("\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t");

			}
		
      out.write("\r\n");
      out.write("\t</table>\r\n");
      out.write("\t<br/>\r\n");
      out.write("\t<div align=\"center\"><a href=\"adminIndex.jsp\">管理者メニューへ戻る</a></div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
